version: '3.7'

services:
  app:
    build: ./src
    depends_on:
      - database
    environment:
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
    ports:
      - 3000:3000
    volumes:
      - ./src:/app

  database:
    image: ${DATABASE_ENGINE}:${DATABASE_ENGINE_VERSION}-alpine
    environment:
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_USER: ${DATABASE_USERNAME}
    volumes:
      - database_volume:/var/lib/postgresql/data

  # --- Infastructure as code ---
  terraform:
    build:
      args:
        TERRAFORM_VERSION: ${TERRAFORM_VERSION}
      context: ./terraform
    environment:
      TF_VAR_AWS_PROFILE: ${AWS_PROFILE}
      TF_VAR_AWS_REGION: ${AWS_REGION}
      TF_VAR_DATABASE_ENGINE: ${DATABASE_ENGINE}
      TF_VAR_DATABASE_ENGINE_VERSION: ${DATABASE_ENGINE_VERSION}
      TF_VAR_DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      TF_VAR_DATABASE_PORT: ${DATABASE_PORT}
      TF_VAR_DATABASE_USERNAME: ${DATABASE_USERNAME}
      TF_VAR_PROJECT_NAME: ${PROJECT_NAME}
    volumes:
      - ${AWS_CREDENTIALS_PATH}:/root/.aws

volumes:
  database_volume: {}
